{"version":3,"sources":["../../generator/module.js"],"names":[],"mappings":"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","file":"module.js","sourcesContent":["import _          from 'lodash';\nimport colors     from 'colors';\nimport fs         from 'fs-extra';\nimport path       from 'path';\nimport program    from 'commander';\nimport handlebars from 'handlebars';\nimport {\n  ROOT_PATH,\n  ENTRY_DIR,\n}                 from '../conf/config';\n\nlet pkgFile = path.join(ROOT_PATH, './package.json');\nlet source  = fs.readJSONSync(pkgFile);\n\nprogram\n.version(source.version)\n.on('--version', () => {\n  console.log(source.version);\n})\n.on('--help', () => {\n  console.log('  Examples:');\n  console.log('    # Create Module/Router');\n  console.log('    $ generate router module/componentA/componentB/...');\n  console.log('');\n})\n.arguments('<cmd> [argv]')\n.action((cmd, argv) => {\n  switch (cmd) {\n    case 'router':\n      generateRouter(argv);\n      break;\n  }\n})\n.parse(process.argv);\n\n/**\n * 创建模块与组件\n * @param  {String} argv 指令\n */\nfunction generateRouter (argv) {\n  let components = _.trim(argv, '\\/').split('\\/');\n  let moduleName = components.shift();\n\n  let moduleDir = path.join(ENTRY_DIR, moduleName);\n  if (generateModule(moduleName, { ingoreExists: false })) {\n    let family  = [moduleName];\n    let dir     = path.join(moduleDir, 'components');\n\n    _.forEach(components, function (name) {\n      if (false === generateComponent(name, family)) {\n        return false;\n      }\n\n      family.push(name);\n    });\n  }\n}\n\n/**\n * 生成模块\n * @param  {string}  name    模块名称\n * @param  {Object}  datas   数据\n * @param  {Boolean} isForce 是否强制\n * @return {Boolean}\n */\nfunction generateModule (name, options) {\n  /**\n   * 检查模板是否存在, 不存在则报错并退出\n   * check moudle template exists and exist process when template not exists.\n   */\n  let templateDir = path.join(ROOT_PATH, 'generator/templates/module');\n  if (!fs.existsSync(templateDir)) {\n    logger('error', `Module template is not found, see ${colors.bold(templateDir)}.`);\n    return false;\n  }\n\n  options = _.defaults(options, { ingoreExists: false });\n\n  let names     = convertName(name);\n  let fileName  = names.underscore;\n  let moduleDir = path.join(ENTRY_DIR, fileName);\n\n  /**\n   * 检查是否已经存在, 如果模块已经存在则直接退出\n   * check module exists and exit process when file is exists.\n   */\n  if (fs.existsSync(moduleDir)) {\n    true !== options.ingoreExists && logger('warn', `Module ${colors.bold(name)} is already exists.`);\n    return true;\n  }\n\n  /**\n   * 复制并渲染模板文件\n   * copy and render file with data.\n   */\n  logger(`Starting to generate ${colors.bold(name)} module.`);\n\n  fs.ensureDirSync(moduleDir);\n\n  let templateFiles = fs.readdirSync(templateDir);\n  copyAndRender(templateFiles, { names }, templateDir, moduleDir);\n  logger('info', `Module ${colors.bold(name)} is generated successfully.\\n`);\n\n  return true;\n}\n\n/**\n * 创建组件\n * @param  {String} name   组件名称\n * @param  {Array}  family 模块关系\n * @param  {Object} datas  数据\n * @return {Boolean}\n */\nfunction generateComponent (name, family, options) {\n  /**\n   * 检查模板是否存在, 不存在则报错并退出\n   * check component template exists and exist process when template not exists.\n   */\n  let templateDir = path.join(ROOT_PATH, 'generator/templates/component');\n  if (!fs.existsSync(templateDir)) {\n    logger('error', `Component template is not found, see ${colors.bold(templateDir)}.`);\n    return false;\n  }\n\n  options = _.defaults(options, { ingoreExists: false });\n\n  let names = convertName(name);\n  let pwd   = _.map(family, function (name) {\n    return `${name}/components/`;\n  });\n\n  let dist  = path.join(ENTRY_DIR, pwd.join('\\/'), name);\n  if (fs.existsSync(dist)) {\n    true !== options.ingoreExists && logger('warn', `Component ${colors.bold(name)} is already exists.`);\n    return true;\n  }\n\n  /**\n   * 复制并渲染模板文件\n   * copy and render file with data.\n   */\n  logger(`Starting to generate ${colors.bold(name)} component.`);\n\n  fs.ensureDirSync(dist);\n\n  let nsNames = _.map(family, convertName);\n  let ns      = {\n    camelcase  : _.map(nsNames, 'camelcase').join('.'),\n    underscore : _.map(nsNames, 'underscore').join('/'),\n    hyphen     : _.map(nsNames, 'hyphen').join(' '),\n    cssFamily  : _.map(nsNames, function ({ hyphen }) {\n      return `${hyphen}-viewport`;\n    }),\n  };\n\n  let templateFiles = fs.readdirSync(templateDir);\n  copyAndRender(templateFiles, { names, ns }, templateDir, dist);\n  logger('info', `Component ${colors.bold(name)} is generated successfully.\\n`);\n\n  return true;\n}\n\n/**\n * 复制并渲染\n * @param {Array}  files   文件集合\n * @param {Object} datas   渲染的数据\n * @param {String} fromDir 资源所在路径\n * @param {String} toDir   目标路径\n */\nfunction copyAndRender (files, datas = {}, fromDir = '', toDir = '') {\n  files.forEach((fileName) => {\n    let file = path.join(fromDir, fileName);\n\n    /**\n     * 判断文件目录是否为文件夹, 如果为文件夹则创建文件夹并将\n     * 里面的文件全部复制到目标相应目录\n     * 这里使用地推方法, 当所有文件都复制完毕会退出递归\n     */\n    if (fs.statSync(file).isDirectory()) {\n      let targetDir = path.join(toDir, fileName);\n      fs.ensureDirSync(targetDir);\n\n      let others = fs.readdirSync(file);\n      copyAndRender(others, datas, file, targetDir);\n      return;\n    }\n\n    /**\n     * 模板文件不是 handlebars 文件则退出,\n     * 目前暂只支持 handlebars 的模板引擎.\n     */\n    if ('.hbs' !== path.extname(file)) {\n      return false;\n    }\n\n    /**\n     * 如果目标文件已经存在, 则退出不做任何操作,\n     * 因此请确定文件是否存在, 若存在则无办法继续执行复制.\n     */\n    let targetFile = path.join(toDir, fileName);\n    if (fs.existsSync(targetFile)) {\n      logger('warn', `File ${colors.bold(targetFile)} is already exists.`);\n      return false;\n    }\n\n    /**\n     * 编译文件并保存到相应的文件目录\n     */\n    let template = fs.readFileSync(file, 'utf-8');\n    let fn       = handlebars.compile(template);\n    let source   = fn(datas);\n    let doneFile = targetFile.replace(path.extname(targetFile), '');\n\n    fs.writeFileSync(doneFile, source);\n    logger(`${colors.bold(doneFile)} is generated successfully.`);\n  });\n}\n\n/**\n * 转化名字\n * @param  {String} name 名字\n * @return {Object}\n * @description\n * 将名字转化成各种格式名字包括 \"-\", \"_\", \"camelName\", \"NAME\", \"name\"\n * \"-\" 一般给 class 使用\n * \"_\" 一般给 filename\n * \"camelName\" 一般给JS使用\n */\nfunction convertName (name) {\n  let camelcase = name.replace(/[- _]([\\w])/g, ($all, $1) => {\n    return $1.toUpperCase();\n  })\n  .replace(/^[A-Z]/, ($all) => {\n    return $all.toLowerCase();\n  });\n\n  let underscore = camelcase.replace(/[A-Z]/g, ($all) => {\n    return `_${$all.toLowerCase()}`;\n  });\n\n  let hyphen = camelcase.replace(/[A-Z]/g, ($all) => {\n    return `-${$all.toLowerCase()}`;\n  });\n\n  let blank = camelcase.replace(/[A-Z]/g, ($all) => {\n    return ` ${$all.toLowerCase()}`;\n  })\n  .replace(/^[a-z]/, ($all) => {\n    return $all.toUpperCase();\n  });\n\n  let upCamelcase = camelcase.replace(/^[a-z]/, ($all) => {\n    return $all.toUpperCase();\n  });\n\n  return {\n    camelcase,\n    upCamelcase,\n    underscore,\n    hyphen,\n    blank,\n  };\n}\n\n/**\n * log\n * @param  {String} type    类型\n * @param  {String} content 内容\n */\nfunction logger (type, content) {\n  if (2 > arguments.length) {\n    return logger(null, type);\n  }\n\n  switch (type) {\n    case 'info':\n      content = colors.green(content);\n      break;\n    case 'warn':\n      content = colors.yellow(content);\n      break;\n    case 'error':\n      content = colors.red(content);\n      break;\n  }\n\n  console.log(`[${colors.cyan('Generator')}] ${content}`);\n}\n"]}